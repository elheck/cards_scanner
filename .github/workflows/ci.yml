name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Conan
      run: |
        python -m pip install --upgrade pip
        pip install conan>=2.0.0
        conan --version
    - name: Cache Conan
      uses: actions/cache@v4
      with:
        path: ~/.conan2
        key: ${{ runner.os }}-conan-${{ hashFiles('conan-*.lock') }}
        restore-keys: ${{ runner.os }}-conan-

    - name: Install clang-tidy
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-tidy

    - name: Install system dependencies
      run: |
        sudo apt-get install -y cmake build-essential
        sudo apt-get install -y libopencv-dev python3-opencv

    - name: Configure Conan
      run: |
        conan profile detect --force
        
    - name: Run build and clang-tidy
      run: |
        chmod +x ./build.sh ./clang_tidy.sh
        ./build.sh
        ./clang_tidy.sh

  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Cache Conan
      uses: actions/cache@v4
      with:
        path: ~/.conan2
        key: ${{ runner.os }}-conan-${{ hashFiles('conan-*.lock') }}
        restore-keys: ${{ runner.os }}-conan-

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Conan
      run: |
        python -m pip install --upgrade pip
        pip install conan>=2.0.0
        conan --version

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential
        sudo apt-get install -y libopencv-dev python3-opencv
        sudo apt-get install -y libgtest-dev

    - name: Configure Conan & validate lockfile
      run: |
        conan profile detect --force
        ARCH_FILE="conan-$(uname -m).lock"
        if [ -f "$ARCH_FILE" ]; then
          echo "Validating existing lockfile: $ARCH_FILE"
          conan lock create . --lockfile="$ARCH_FILE" --lockfile-out=verify.lock --build=missing
        else
          echo "No lockfile present (expected $ARCH_FILE)" >&2
          exit 1
        fi

    - name: Build and test
      run: |
        chmod +x ./rebuild.sh ./run_test.sh
        ./rebuild.sh
        ./run_test.sh

  lock-drift:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v3
      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          pip install conan>=2.0.0
          conan --version
      - name: Cache Conan
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ runner.os }}-conan-${{ hashFiles('conan-*.lock') }}
          restore-keys: ${{ runner.os }}-conan-
      - name: Detect profile
        run: conan profile detect --force
      - name: Check lock drift (no build allowed)
        run: |
          ARCH_FILE="conan-$(uname -m).lock"
          if [ ! -f "$ARCH_FILE" ]; then
            echo "Missing lockfile: $ARCH_FILE" >&2; exit 1
          fi
          set -e
          conan lock create . --lockfile="$ARCH_FILE" --lockfile-out=drift.lock --build=never || { echo "Unexpected build attempted (lock incomplete)"; exit 1; }
          if ! diff -q "$ARCH_FILE" drift.lock >/dev/null; then
            echo "Lockfile drift detected. Run ./update_lock.sh and commit updated $ARCH_FILE." >&2
            echo '--- Diff (truncated) ---'
            diff -u "$ARCH_FILE" drift.lock | head -n 200 || true
            exit 1
          fi
          echo "No lock drift detected."
