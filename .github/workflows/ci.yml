name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Conan
      run: |
        python -m pip install --upgrade pip
        pip install conan>=2.0.0
        conan --version

    - name: Cache Conan
      uses: actions/cache@v4
      with:
        path: ~/.conan2
        key: ${{ runner.os }}-conan-${{ hashFiles('conan.lock') }}
        restore-keys: ${{ runner.os }}-conan-

    - name: Install clang-tidy
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-tidy

    - name: Install system dependencies
      run: |
        sudo apt-get install -y cmake build-essential
        sudo apt-get install -y libopencv-dev python3-opencv

    - name: Configure Conan
      run: |
        conan profile detect --force
        
    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..

    - name: Run clang-tidy
      run: |
        set -e
        exit_code=0
        files_with_errors=""
        while IFS= read -r file; do
          echo "Checking $file..."
          if ! clang-tidy -warnings-as-errors=* -p build/ "$file"; then
            echo "❌ clang-tidy failed for $file"
            files_with_errors="$files_with_errors\n$file"
            exit_code=1
          fi
        done < <(find src -name '*.cpp' -o -name '*.h')
        if [ $exit_code -ne 0 ]; then
          echo -e "\n❌ Files with clang-tidy errors:$files_with_errors"
        fi
        exit $exit_code

  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache Conan
      uses: actions/cache@v4
      with:
        path: ~/.conan2
        key: ${{ runner.os }}-conan-${{ hashFiles('conan.lock') }}
        restore-keys: ${{ runner.os }}-conan-

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Conan
      run: |
        python -m pip install --upgrade pip
        pip install conan>=2.0.0
        conan --version

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential
        sudo apt-get install -y libopencv-dev python3-opencv
        sudo apt-get install -y libgtest-dev

    - name: Configure Conan & validate lockfile
      run: |
        conan profile detect --force
        if [ -f conan.lock ]; then
          echo "Validating existing lockfile"
          conan lock create . --lockfile=conan.lock --lockfile-out=verify.lock --build=missing
        else
          echo "No lockfile present, skipping validation" >&2
        fi

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake ..

    - name: Build
      working-directory: build
      run: cmake --build . --parallel

    - name: Run tests
      working-directory: build
      run: ctest -V

  lock-drift:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v3
      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          pip install conan>=2.0.0
          conan --version
      - name: Cache Conan
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ runner.os }}-conan-${{ hashFiles('conan.lock') }}
          restore-keys: ${{ runner.os }}-conan-
      - name: Detect profile
        run: conan profile detect --force
      - name: Check lock drift (no build allowed)
        run: |
          if [ ! -f conan.lock ]; then
            echo "Missing conan.lock" >&2; exit 1; fi
          set -e
          conan lock create . --lockfile=conan.lock --lockfile-out=drift.lock --build=never || { echo "Unexpected build attempted (lock incomplete)"; exit 1; }
          if ! diff -q conan.lock drift.lock >/dev/null; then
            echo "Lockfile drift detected. Run ./update_lock.sh and commit updated conan.lock." >&2
            echo '--- Diff (truncated) ---'
            diff -u conan.lock drift.lock | head -n 200 || true
            exit 1
          fi
          echo "No lock drift detected."
